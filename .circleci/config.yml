version: 2.1

executors:
  linux-executor:
    docker:
      - image: cimg/cpp:latest  # Use a C++ Docker image
    working_directory: ~/project  # Set the working directory for both build and scan

jobs:
  build:
    executor: linux-executor
    steps:
      # Checkout your code
      - checkout

      # Install dependencies (if necessary)
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y build-essential cmake

      # Run your build commands (adjust according to your setup)
      - run:
          name: Build project
          command: |
            mkdir -p build
            cd build
            cmake ..
            make

      # Set up SonarScanner and run analysis
      - run:
          name: SonarQube analysis
          command: |
            # Install SonarScanner (or use Docker image with SonarScanner)
            curl -sSLo /tmp/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
            unzip /tmp/sonar-scanner.zip -d /tmp
            export PATH=$PATH:/tmp/sonar-scanner-4.7.0.2747-linux/bin

            # Rewrite paths in compile_commands.json if necessary
            sed -i "s|$(pwd)|/tmp/project|g" ~/project/build/compile_commands.json

            # Run SonarQube analysis
            sonar-scanner -Dsonar.projectKey=Devsec_A3_New \
                           -Dsonar.organization=bilalbaree \
                           -Dsonar.host.url=https://sonarcloud.io \
                           -Dsonar.sources=src \
                           -Dsonar.branch.name=main \
                           -Dsonar.cfamily.build-wrapper-output=build/compile_commands.json

workflows:
  version: 2
  build:
    jobs:
      - build
